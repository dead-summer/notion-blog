import{_ as i,c as n,d as t,a as l,b as a,e as p,r as c,o as d}from"./app-B6dbd404.js";const r={};function o(h,s){const e=c("Mermaid");return d(),n("div",null,[s[0]||(s[0]=t(`<p>基本语法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">while</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">condition</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">code</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">block</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">to</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">be</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">executed</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>while</code> 循环会在指定条件为 <code>true</code> 时循环执行循环体。</p>`,3)),l(e,{id:"mermaid-7",code:"eJxLL0osyFAIceFSAAKn6Kcdc58u737aM+3pvlXP+9Y/7Z/xsr0/FiKpoKtrp+BcDZF5Nnfhk93basEyziCZmpKi0tQaBZfoZ53LXyzsgah6sncyWMWz2VueTduAaaYLxEwkU9ISc4qBxrhGv9i++Wn7LogWiGJXsGL36Oe7lz/fvRZijUJafpEC1NwJfc9ntTzZvfj5gsZYLgAoCWaA"}),s[1]||(s[1]=a("p",null,"注意事项和细节说明",-1)),s[2]||(s[2]=a("ol",null,[a("li",null,"循环条件是返回一个布尔值的表达式"),a("li",null,[a("code",null,"while"),p(" 循环是先判断再执行语句")])],-1))])}const m=i(r,[["render",o],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/hsp-java/5-8-while-loop-control/","title":"8 while 循环控制","lang":"zh-CN","frontmatter":{"title":"8 while 循环控制","createTime":"2024/12/02 17:34:00","permalink":"/hsp-java/5-8-while-loop-control/"},"headers":[],"readingTime":{"minutes":0.48,"words":143},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 5 章 程序控制结构/5.08 while 循环控制.md"}');export{m as comp,u as data};
