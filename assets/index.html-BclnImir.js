import{_ as a,c as i,d as e,o as n}from"./app-B6dbd404.js";const p="/notion-blog/assets/c5e70ba8c928ec5fa87e5b3181e73a62-Ca734iXZ.png",l="/notion-blog/assets/5fa33e6f7f1d69f2b8cae82be8ad436d-BXNuWCQc.png",t={};function c(h,s){return n(),i("div",null,s[0]||(s[0]=[e(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span><strong><strong>介绍</strong></strong></span></a></h2><p>索引 (index) 是帮助数据库高效获取数据的数据结构。简单来说，就是使用索引可以提高查询的效率。</p><p><strong>优点：</strong></p><ol><li>提高数据查询的效率，降低数据库的 IO 成本。</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低 CPU 消耗。</li></ol><p><strong>缺点：</strong></p><ol><li>索引会占用存储空间。</li><li>索引大大提高了查询效率，同时却也降低了 insert、update、delete 的效率。</li></ol><p>使用索引与不使用索引的查询对比如下：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">添加索引</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">idx_sku_sn</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_sku</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(sn);</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">#在添加索引时，也需要消耗时间</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">查询数据（使用了索引）</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_sku</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">where</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">sn</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">100000003145008</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结构" tabindex="-1"><a class="header-anchor" href="#结构"><span><strong><strong>结构</strong></strong></span></a></h2><p>MySQL 数据库支持的索引结构有很多，如：Hash 索引、B+Tree 索引、Full-Text 索引等。如果没有特别指明，通常所说的索引，都是指默认的 B+Tree 结构组织的索引。</p><p>二叉树结构：</p><p><img src="`+p+'" alt="image.png"></p><ul><li>二叉查找树：左边的子节点比父节点小，右边的子节点比父节点大</li></ul><p>当向二叉查找树保存数据时，如果按照从大到小（或从小到大）的顺序保存，此时就会形成一个单向链表，搜索性能会打折扣。</p><p>此时可以选择平衡二叉树或者是红黑树来解决上述问题。但是在 MySQL 数据库中并没有使用二叉搜索数或二叉平衡数或红黑树来作为索引的结构。</p><p><strong>思考：采用二叉搜索树或者是红黑树来作为索引的结构有什么问题？</strong></p><p>说明： 如果数据结构采用红黑树，那么查询 1000 万条数据时，根据计算，树的高度大约为 23 左右。这种方式确实比之前的方法快很多。 然而，在高并发访问的情况下（例如 100 万用户访问），仍然可能会导致效率降低。</p><p>因此，为了减少红黑树的高度，需要增加树的宽度，即不再像红黑树那样，每个节点只能保存一个数据。 可以引入另外一种数据结构，允许一个节点保存多个数据，这样就可以增加宽度，从而降低树的高度。 这种数据结构的一个例子就是 B+Tree，它可以满足上述需求。</p><p>B+Tree 结构：</p><p><img src="'+l+'" alt="image.png"></p><ul><li>每一个节点，可以存储多个 key（有 n 个 key，就有 n 个指针）。</li><li>节点分为：叶子节点、非叶子节点。</li><li>叶子节点，就是最后一层子节点，所有的数据都存储在叶子节点上。</li><li>非叶子节点，不是树结构最下面的节点，用于索引数据，存储的的是：key 和指针。</li><li>为了提高范围查询效率，叶子节点形成了一个双向链表，便于数据的排序及区间范围查询。</li></ul><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span><strong><strong>语法</strong></strong></span></a></h2><p><strong>创建索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">[</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">unique</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">]</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">索引名</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">表名</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(字段名,...</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>案例：为 tb_emp 表的 name 字段建立一个索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">idx_emp_name</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_emp(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在创建表时，如果添加了主键和唯一约束，就会默认创建：主键索引、唯一约束。</p><p><strong>查看索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">show</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>案例：查询 tb_emp 表的索引信息</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">show</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_emp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>删除索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">drop</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">索引名</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">表名;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>案例：删除 tb_emp 表中 name 字段的索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">drop</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">index</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">idx_emp_name</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_emp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意事项：</strong></p><ul><li>主键字段，在建表时，会自动创建主键索引。</li><li>添加唯一约束时，数据库实际上会添加唯一索引。</li></ul>',37)]))}const r=a(t,[["render",c],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/itheima-javaweb/day08-3-index/","title":"Day08-3 索引","lang":"zh-CN","frontmatter":{"title":"Day08-3 索引","createTime":"2025/03/01T12:58:00.000Z","updateTime":"2025/03/02T02:43:00.000Z","permalink":"/itheima-javaweb/day08-3-index/"},"headers":[],"readingTime":{"minutes":3.09,"words":928},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/黑马程序员 JavaWeb/8. Day08 MySQL-3 + Mybatis-1/Day08-3 索引.md"}');export{r as comp,k as data};
