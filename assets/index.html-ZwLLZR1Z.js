import{_ as a,c as i,d as n,o as e}from"./app-B6dbd404.js";const p="/notion-blog/assets/8afd3e955e5ccb5ebd868aa09bd9fbbe-NUtiPeG9.png",l="/notion-blog/assets/7e34822aded0a4ce6e2d5e46eb140869-CuerWRIJ.png",t="/notion-blog/assets/d1bb185a5748ae8e8c16628a34081ef4-CaeD17fh.png",c="/notion-blog/assets/00eb88ced632642b0deb20b8553c2b90-DqNlrU_3.png",d="/notion-blog/assets/a300ec00e8d84b0ccb403bc9f728fb85-C5zMAAiy.png",r="/notion-blog/assets/f99e9e4309bd74475006089a093fb187-eaoTQ0u4.png",o="/notion-blog/assets/9b213372540c2dc84de5c8daeb6fd23f-PsMqTcfR.png",h="/notion-blog/assets/ba8295c682bc63e2d2e0f862339862b7-C8Z5g1Mj.png",g="/notion-blog/assets/81dad43b1a366cef91f0d2501b991ab3-C8f7ROQ2.png",k="/notion-blog/assets/dfec883e8a39e4ddabde9c7008f11fe9-DGmPK8M9.png",m="/notion-blog/assets/948bc944300687634d98d1d300d2111a-CEGbcogF.png",v="/notion-blog/assets/c4e1f5a697fad1e707921c3318ae8e66-IPJ_Lp2d.png",y="/notion-blog/assets/05370c3558e60ecae1d66ffc3f3bb074-Lr78NSM6.png",u="/notion-blog/assets/b12bed0da2483cdf8df3802789104efc-DsWOwlpp.png",b="/notion-blog/assets/cd7c4f4e0b46ea3304d2b2357a7e263d-DgGyES5a.png",D="/notion-blog/assets/94596ec51744c423d4bd3498f527e8fd-CADY5bmA.png",A="/notion-blog/assets/8a67077a13e2e777da6913eddca24dad-C0yXNG39.png",f="/notion-blog/assets/6ecaf5dbe0a8db62aaf87d2f0cbbea06-DToy-FBm.png",E="/notion-blog/assets/4d27f2bea77fae20c612ca00561fef17-DgXFDCAO.png",M="/notion-blog/assets/53094afc35cb31ac0268f25f1b077536-B4oBlO4i.png",B="/notion-blog/assets/17820b212396772c9a3419ffeba7fd73-AkP1pP7o.png",x={};function _(j,s){return e(),i("div",null,s[0]||(s[0]=[n('<h2 id="初识-maven" tabindex="-1"><a class="header-anchor" href="#初识-maven"><span><strong><strong>初识 Maven</strong></strong></span></a></h2><h3 id="什么是-maven" tabindex="-1"><a class="header-anchor" href="#什么是-maven"><span><strong><strong>什么是 Maven</strong></strong></span></a></h3><p>Maven 是 Apache 旗下的一个开源项目，它是一个用于管理和构建 Java 项目的工具。Apache 软件基金会是一个非盈利性组织，专门为支持开源项目而生。</p><h3 id="maven-的作用" tabindex="-1"><a class="header-anchor" href="#maven-的作用"><span><strong><strong>Maven 的作用</strong></strong></span></a></h3><p>Maven 主要有以下三个作用：</p><ol><li><strong>依赖管理：</strong> 方便快捷地管理项目依赖的资源（jar 包），避免版本冲突问题。</li><li><strong>统一项目结构：</strong> 提供标准、统一的项目结构。 <ul><li><strong>标准项目结构：</strong><ul><li><code>src/main/java</code>: Java 源代码目录</li><li><code>src/main/resources</code>: 配置文件信息目录</li><li><code>src/test/java</code>: 测试代码目录</li><li><code>src/test/resources</code>: 测试配置文件信息目录</li></ul></li></ul></li><li><strong>项目构建：</strong> 提供标准的、跨平台的自动化项目构建方式（编译、测试、打包、发布）。</li></ol><h2 id="maven-概述" tabindex="-1"><a class="header-anchor" href="#maven-概述"><span><strong><strong>Maven 概述</strong></strong></span></a></h2><h3 id="maven-介绍" tabindex="-1"><a class="header-anchor" href="#maven-介绍"><span><strong><strong>Maven 介绍</strong></strong></span></a></h3><p>Maven 是一个项目管理和构建工具，它基于<strong>项目对象模型 (Project Object Model, POM)</strong> 的概念，通过一小段描述信息来管理项目的构建、报告和文档。</p><h3 id="maven-模型" tabindex="-1"><a class="header-anchor" href="#maven-模型"><span><strong><strong>Maven 模型</strong></strong></span></a></h3><p>Maven 的核心模型包括：</p><ol><li><p><strong>项目对象模型 (Project Object Model, POM)</strong></p><ul><li>将项目抽象成一个对象模型，每个项目都有自己的坐标。 <ul><li><strong>坐标：</strong> 资源的唯一标识，通过坐标可以定位到所需资源 (jar 包) 位置。</li></ul></li></ul></li><li><p><strong>依赖管理模型 (Dependency)</strong></p><ul><li>使用坐标来描述当前项目依赖哪些第三方 jar 包。</li></ul></li><li><p><strong>构建生命周期/阶段 (Build lifecycle &amp; phases)</strong></p><ul><li>用于完成标准化构建流程。Maven 提供了编译、打包等插件来完成构建过程中的各个阶段。</li></ul><p><img src="'+p+'" alt="image.png"></p></li></ol><h3 id="maven-仓库" tabindex="-1"><a class="header-anchor" href="#maven-仓库"><span><strong><strong>Maven 仓库</strong></strong></span></a></h3><p>仓库用于存储资源，管理各种 jar 包。本质上就是一个目录(文件夹)，用来存储开发中所有依赖(就是 jar包)和插件。</p><p>Maven 仓库分为三种：</p><ol><li><strong>本地仓库：</strong> 自己计算机上的一个目录，用来存储 jar 包。</li><li><strong>中央仓库：</strong> 由 Maven 团队维护的全球唯一的仓库，可以在 <code>https://repo1.maven.org/maven2/</code> 访问。</li><li><strong>远程仓库 (私服)：</strong> 一般由公司团队搭建的私有仓库。</li></ol><p><strong>Jar 包查找顺序：</strong> 本地仓库 -&gt; 远程仓库 -&gt; 中央仓库</p><h3 id="maven-安装" tabindex="-1"><a class="header-anchor" href="#maven-安装"><span><strong><strong>Maven 安装</strong></strong></span></a></h3><h4 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span><strong><strong>下载</strong></strong></span></a></h4><p>从 Maven 官网下载：<a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener noreferrer">https://maven.apache.org/download.cgi</a></p><h4 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤"><span><strong><strong>安装步骤</strong></strong></span></a></h4><ol><li><p><strong>解压安装：</strong> 将下载的安装包解压到没有中文、特殊字符的路径下。</p><ul><li><strong>目录结构：</strong><ul><li><code>bin</code>: 存放可执行命令（如 <code>mvn</code> 命令）。</li><li><code>conf</code>: 存放 Maven 的配置文件（<code>settings.xml</code>）。</li><li><code>lib</code>: 存放 Maven 依赖的 jar 包。</li></ul></li></ul></li><li><p><strong>配置本地仓库：</strong></p><ol><li><p>在计算机上新建一个目录作为本地仓库。如可在 Maven 的安装目录下新建 <code>mvn_repo</code> 作为本地仓库。</p></li><li><p>修改 <code>conf/settings.xml</code> 配置文件：</p><ul><li>找到 <code>&lt;localRepository&gt;</code> 标签，将注释取消，并修改标签体内容为本地仓库的路径。</li></ul><p><img src="'+l+`" alt="image.png"></p></li></ol></li><li><p><strong>配置阿里云私服：</strong></p><ol><li><p>修改 <code>conf/settings.xml</code> 配置文件：</p><ul><li>在 <code>&lt;mirrors&gt;</code> 标签下添加 <code>&lt;mirror&gt;</code> 子标签，配置阿里云的镜像仓库。</li><li>课件中给出了添加阿里云仓库配置的示例代码。</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirror</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">alimaven</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">aliyun</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">maven</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">http://maven.aliyun.com/nexus/content/groups/public</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirrorOf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">central</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirrorOf</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">mirror</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>代码解释：</strong></p><ul><li><code>&lt;id&gt;</code>: 镜像的唯一标识符。</li><li><code>&lt;name&gt;</code>: 镜像的名称，用于描述。</li><li><code>&lt;url&gt;</code>: 镜像的 URL 地址，指向阿里云的 Maven 仓库。</li><li><code>&lt;mirrorOf&gt;</code>: 指定该镜像替代的仓库，<code>central</code> 表示替代中央仓库。</li><li><strong>重点：</strong> 阿里云仓库可以加速依赖下载，提高构建效率。</li></ul></li><li><p><strong>配置环境变量：</strong></p><ol><li>新建系统变量 <code>MAVEN_HOME</code>，值为 Maven 的解压安装目录。</li><li>在 <code>Path</code> 环境变量中添加 <code>%MAVEN_HOME%\\\\bin</code>。</li></ol></li><li><p><strong>验证安装：</strong> 打开 DOS 命令提示符，输入 <code>mvn -v</code>，出现 Maven 版本信息表示安装成功。</p><p><img src="`+t+'" alt="image.png"></p></li></ol><h2 id="idea-集成-maven" tabindex="-1"><a class="header-anchor" href="#idea-集成-maven"><span><strong><strong>IDEA 集成 Maven</strong></strong></span></a></h2><h3 id="配置-maven-环境" tabindex="-1"><a class="header-anchor" href="#配置-maven-环境"><span><strong><strong>配置 Maven 环境</strong></strong></span></a></h3><h4 id="当前工程设置" tabindex="-1"><a class="header-anchor" href="#当前工程设置"><span><strong><strong>当前工程设置</strong></strong></span></a></h4><ol><li><p>打开 IDEA，选择 <code>File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Build Tools -&gt; Maven</code>。</p><p><img src="'+c+'" alt="image.png"></p><p><img src="'+d+'" alt="image.png"></p></li><li><p>设置 IDEA 使用本地安装的 Maven，并修改配置文件及本地仓库路径。</p><ul><li><code>Maven home path</code>: 指定 Maven 的安装目录。</li><li><code>User settings file</code>: 指定 <code>settings.xml</code> 配置文件的存放路径。</li><li><code>Local repository</code>: 指定 Maven 的本地仓库的路径。</li></ul><p><img src="'+r+'" alt="image.png"></p></li><li><p>配置工程的编译版本为 11（Maven 默认使用的编译版本为 5）。</p><p><img src="'+o+'" alt="image.png"></p></li></ol><p>上述配置的 Maven 环境，只是针对于当前工程的，如果我们再创建一个 project，又恢复成默 认的配置了。 要解决这个问题， 我们就需要配置全局的 Maven 环境。</p><h4 id="全局设置" tabindex="-1"><a class="header-anchor" href="#全局设置"><span><strong><strong>全局设置</strong></strong></span></a></h4><ol><li><p>进入 IDEA 欢迎页面 (<code>File -&gt; Close Project</code>)。</p></li><li><p>打开 <code>All Settings</code>，选择 <code>Build, Execution, Deployment -&gt; Build Tools -&gt; Maven</code>。</p><p><img src="'+h+'" alt="image.png"></p><p><img src="'+g+'" alt="image.png"></p></li><li><p>配置 Maven 的全局环境信息和编译版本。</p><ul><li><strong>注意：</strong> 全局设置会应用于以后创建的所有项目。</li></ul></li></ol><h3 id="maven-项目" tabindex="-1"><a class="header-anchor" href="#maven-项目"><span><strong><strong>Maven 项目</strong></strong></span></a></h3><h4 id="创建-maven-项目" tabindex="-1"><a class="header-anchor" href="#创建-maven-项目"><span><strong><strong>创建 Maven 项目</strong></strong></span></a></h4><ol><li><p>创建一个空项目。</p><p><img src="'+k+'" alt="image.png"></p></li><li><p>创建模块，选择 <code>Maven Archetype</code> ，然后 <code>Archetype</code> 中下拉选择后缀为 <code>quickstart</code> 。随后填写模块名称，坐标信息（<code>groupId</code>，<code>artifactId</code>，<code>version</code>）。</p><p><img src="'+m+'" alt="image.png"></p></li><li><p>在 Maven 工程下，创建 <code>HelloWorld</code> 类。</p><p><img src="'+v+`" alt="image.png"></p><ul><li><strong>Maven 项目的目录结构：</strong><ul><li><code>src/main/java</code>: 源代码 java 文件目录</li><li><code>src/main/resources</code>: 源代码配置文件目录</li><li><code>src/test/java</code>: 测试代码 java 目录</li><li><code>src/test/resources</code>: 测试代码配置文件目录</li><li><code>target</code>: 编译、打包生成文件存放目录</li></ul></li></ul></li><li><p>编写 <code>HelloWorld</code> 类，并运行。</p></li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span class="space"> </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">HelloWorld</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">static</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Maven</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pom-配置详解" tabindex="-1"><a class="header-anchor" href="#pom-配置详解"><span><strong><strong>POM 配置详解</strong></strong></span></a></h4><p><strong>POM (Project Object Model)</strong> 指的是项目对象模型，使用 <code>pom.xml</code> 文件来实现。</p><ul><li><code>&lt;project&gt;</code>: POM 文件的根标签，表示当前 Maven 项目。</li><li><code>&lt;modelVersion&gt;</code>: 声明项目描述遵循哪一个 POM 模型版本，目前是 <code>4.0.0</code>。</li><li>坐标 (<code>groupId</code>、<code>artifactId</code>、<code>version</code>): 定位项目在本地仓库中的位置。</li><li><code>&lt;packaging&gt;</code>: Maven 项目的打包方式，通常设置为 <code>jar</code> 或 <code>war</code>（默认值：<code>jar</code>）。</li></ul><h4 id="maven-坐标详解" tabindex="-1"><a class="header-anchor" href="#maven-坐标详解"><span><strong><strong>Maven 坐标详解</strong></strong></span></a></h4><p>Maven 中的坐标是资源的唯一标识，通过该坐标可以唯一定位资源位置。</p><ul><li><p><code>groupId</code>: 定义当前 Maven 项目隶属组织名称（通常是域名反写，例如：<code>com.itheima</code>）。</p></li><li><p><code>artifactId</code>: 定义当前 Maven 项目名称（通常是模块名称，例如 <code>order-service</code>、<code>goods-service</code>）。</p></li><li><p><code>version</code>: 定义当前项目版本号。</p><p><img src="`+y+'" alt="image.png"></p></li></ul><h3 id="导入-maven-项目" tabindex="-1"><a class="header-anchor" href="#导入-maven-项目"><span><strong><strong>导入 Maven 项目</strong></strong></span></a></h3><ul><li><p><strong>方式 1：</strong> 使用 Maven 面板，快速导入项目。</p><ul><li>打开 IDEA，选择右侧 Maven 面板，点击 <code>+</code> 号，选中对应项目的 <code>pom.xml</code> 文件，双击即可。</li></ul><p><img src="'+u+'" alt="image.png"></p></li><li><p><strong>方式 2：</strong> 使用 IDEA 导入模块项目。</p><ul><li><code>File -&gt; Project Structure -&gt; Modules -&gt; + -&gt; Import Module</code>，找到要导入工程的 <code>pom.xml</code>。</li></ul><p><img src="'+b+`" alt="image.png"></p></li></ul><h2 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理"><span><strong><strong>依赖管理</strong></strong></span></a></h2><h3 id="依赖配置" tabindex="-1"><a class="header-anchor" href="#依赖配置"><span><strong><strong>依赖配置</strong></strong></span></a></h3><p>依赖指当前项目运行所需要的 jar 包。一个项目中可以引入多个依赖。</p><ul><li><p><strong>配置步骤：</strong></p><ol><li>在 <code>pom.xml</code> 中编写 <code>&lt;dependencies&gt;</code> 标签。</li><li>在 <code>&lt;dependencies&gt;</code> 标签中使用 <code>&lt;dependency&gt;</code> 引入坐标。</li><li>定义坐标的 <code>groupId</code>、<code>artifactId</code>、<code>version</code>。</li></ol></li><li><p>示例代码：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">第1个依赖</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">:</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">logback</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">ch.qos.logback</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">logback-classic</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">1.2.11</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">第2个依赖</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">:</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">junit</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">4.12</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>注意事项：</strong></p><ol><li>如果引入的依赖在本地仓库中不存在，将会连接远程仓库/中央仓库，然后下载依赖。</li><li>如果不知道依赖的坐标信息，可以到 Maven <a href="https://mvnrepository.com/" target="_blank" rel="noopener noreferrer">中央仓库</a> 中搜索。</li></ol></li><li><p>添加依赖的几种方式：</p><ol><li>利用中央仓库搜索。</li><li>利用 IDEA 工具搜索：使用快捷键 <code>Alt+Insert</code> 。</li><li>快速导入依赖。</li></ol></li></ul><h3 id="依赖传递" tabindex="-1"><a class="header-anchor" href="#依赖传递"><span><strong><strong>依赖传递</strong></strong></span></a></h3><h4 id="依赖具有传递性" tabindex="-1"><a class="header-anchor" href="#依赖具有传递性"><span><strong><strong>依赖具有传递性</strong></strong></span></a></h4><p>依赖传递是指 A 依赖 B，B 依赖 C，那么 A 也会间接依赖 C。</p><p><strong>依赖类型：</strong></p><ol><li>直接依赖：在当前项目中通过依赖配置建立的依赖关系。</li><li>间接依赖：被依赖的资源如果依赖其他资源，当前项目间接依赖其他资源。</li></ol><p><img src="`+D+`" alt="image.png"></p><p>比如以上图中：</p><ul><li>projectA 依赖了 projectB 。对于 projectA 来说，projectB 就是直接依赖。</li><li>projectB 依赖了 projectC 及其他 ja r包。 那么此时，在projectA 中也会将 projectC 的依赖传递下来。对于 projectA 来说，projectC 就是间接依赖。</li></ul><h4 id="排除依赖" tabindex="-1"><a class="header-anchor" href="#排除依赖"><span><strong><strong>排除依赖</strong></strong></span></a></h4><p>排除依赖是指主动断开依赖的资源（被排除的资源无需指定版本）。</p><ul><li><strong>使用场景：</strong> 当 A 依赖 B，B 依赖 C，但 A 不想依赖 C 时，可以使用排除依赖。</li></ul><p>排除依赖的示例：</p><p>maven-projectA 依赖了 maven-projectB，maven-projectB 依赖了 Junit。基于依赖的传递性，所以maven-projectA 也依赖了 Junit 。maven-projectA 可修改其 <code>pom.xml</code> 文件排除依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">com.itheima</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">maven-projectB</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">1.0-SNAPSHOT</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">&lt;!--排除依赖,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">主动断开依赖的资源--&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">exclusions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">exclusion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">junit</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">exclusion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">exclusions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">dependency</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>代码解释：</strong><ul><li><code>&lt;exclusions&gt;</code>: 用于排除传递性依赖。</li><li><code>&lt;exclusion&gt;</code>: 指定要排除的依赖的 <code>groupId</code> 和 <code>artifactId</code>。</li><li><strong>重点：</strong> 排除依赖可以解决依赖冲突，避免引入不需要的依赖。</li></ul></li></ul><h3 id="依赖范围" tabindex="-1"><a class="header-anchor" href="#依赖范围"><span><strong><strong>依赖范围</strong></strong></span></a></h3><p>可以通过 <code>&lt;scope&gt;</code> 标签设置依赖的作用范围，限制依赖的使用范围。</p><table><thead><tr><th>scope 值</th><th>主程序</th><th>测试程序</th><th>打包（运行）</th><th>范例</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>log4j</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td>provided</td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>jdbc 驱动</td></tr></tbody></table><ul><li><strong>作用范围：</strong><ol><li>主程序范围有效（<code>main</code> 文件夹范围内）。</li><li>测试程序范围有效（<code>test</code> 文件夹范围内）。</li><li>是否参与打包运行（<code>package</code> 指令范围内）。</li></ol></li><li><strong>重点：</strong> 依赖范围可以控制依赖在不同环境下的可用性，减小打包体积。</li></ul><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span><strong><strong>生命周期</strong></strong></span></a></h3><h4 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span><strong><strong>介绍</strong></strong></span></a></h4><p>Maven 的生命周期就是为了对所有的构建过程进行抽象和统一。描述了一次项目构建，经历哪些阶段。Maven 对项目构建的生命周期划分为 3 套（相互独立）：</p><p><img src="`+A+'" alt="image.png"></p><ol><li><strong>clean：</strong> 清理工作。</li><li><strong>default：</strong> 核心工作。如：编译、测试、打包、安装、部署等。</li><li><strong>site：</strong> 生成报告、发布站点等。</li></ol><p>三套生命周期又包含如下具体的阶段：</p><p><img src="'+f+'" alt="image.png"></p><ul><li><p><strong>常用阶段：</strong></p><ul><li><code>clean</code>: 移除上一次构建生成的文件。</li><li><code>compile</code>: 编译项目源代码。</li><li><code>test</code>: 使用合适的单元测试框架运行测试 (junit)。</li><li><code>package</code>: 将编译后的文件打包，如：jar、war 等。</li><li><code>install</code>: 安装项目到本地仓库。</li></ul></li><li><p><strong>生命周期顺序：</strong> <code>clean -&gt; validate -&gt; compile -&gt; test -&gt; package -&gt; verify -&gt; install -&gt; site -&gt; deploy</code>。</p></li><li><p><strong>重点：</strong> 在同一套生命周期中，执行后面的生命周期时，前面的生命周期都会执行。</p><p><strong>思考</strong>：当运行 <code>package</code> 生命周期时，<code>clean</code>、<code>compile</code> 生命周期会不会运行？</p><p><code>clean</code> 不会运行，<code>compile</code> 会运行。 因为 <code>compile</code> 与 <code>package</code> 属于同一套生命周期，而 <code>clean</code> 与 <code>package</code> 不属于同一套生命周期。</p></li></ul><h4 id="执行" tabindex="-1"><a class="header-anchor" href="#执行"><span><strong><strong>执行</strong></strong></span></a></h4><ul><li><p><strong>方式一：</strong> 在 IDEA 工具右侧的 Maven 工具栏中，选择对应的生命周期，双击执行。</p><p>选择对应的生命周期，双击执行：</p><p><img src="'+E+'" alt="image.png"></p></li><li><p><strong>方式二：</strong> 在 DOS 命令行中，通过 Maven 命令执行。</p><p><strong>基本命令：</strong></p><ul><li><strong><code>mvn help:help</code></strong>: 显示 Maven 帮助信息，可以查看 Maven 版本、插件版本等。</li><li><strong><code>mvn clean</code></strong>: 清理项目，删除 <code>target</code> 目录，该目录包含了编译后的类、打包的文件等。</li><li><strong><code>mvn compile</code></strong>: 编译项目的源代码。</li><li><strong><code>mvn test-compile</code></strong>: 编译测试代码。</li><li><strong><code>mvn test</code></strong>: 运行单元测试。</li><li><strong><code>mvn package</code></strong>: 将项目打包成可分发的格式，例如 JAR、WAR、EAR 等，具体取决于 <code>pom.xml</code> 文件中的配置。</li><li><strong><code>mvn install</code></strong>: 将打包后的构件安装到本地 Maven 仓库，以便其他项目可以依赖它。</li><li><strong><code>mvn deploy</code></strong>: 将打包后的构件发布到远程 Maven 仓库，通常用于共享给团队或公开发布。</li><li><strong><code>mvn site</code></strong>: 生成项目的站点文档。</li></ul></li></ul><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span><strong><strong>附录</strong></strong></span></a></h2><h3 id="更新依赖索引" tabindex="-1"><a class="header-anchor" href="#更新依赖索引"><span><strong><strong>更新依赖索引</strong></strong></span></a></h3><p>有时候给 IDEA 配置完 Maven 仓库信息后，在 IDEA 中依然搜索不到仓库中的 jar 包。这是因为仓库中的 jar 包索引尚未更新到 IDEA 中。这个时候我们就需要更新 IDEA 中 Maven 的索引了。</p><p><img src="'+M+'" alt="image.png"></p><h3 id="清理-maven-仓库" tabindex="-1"><a class="header-anchor" href="#清理-maven-仓库"><span><strong><strong>清理 Maven 仓库</strong></strong></span></a></h3><p>初始情况下，本地仓库没有任何 jar 包，此时会从私服去下载（如果没有配置，就直接从中央仓库去下载），可能由于网络的原因，jar 包下载不完全，这些不完整的 jar 包都是以 <code>lastUpdated</code> 结尾。此时，Maven 不会再重新帮你下载，需要你删除这些以 <code>lastUpdated</code> 结尾的文件，然后 Maven 才会再次自动下载这些 jar 包。</p><p><img src="'+B+`" alt="image.png"></p><p>如果本地仓库中有很多这样的以 <code>lastUpadted</code> 结尾的文件，可以定义一个批处理文件，在其中 编写如下脚本来删除：</p><p><strong>批处理脚本示例：</strong><code>del_lastUpdated.bat</code></p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">set</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">REPOSITORY_PATH=E:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">develop</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">apache-maven-3.6.1</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">mvn_repo</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rem</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">正在搜索...</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">del</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/s</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/q</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">%REPOSITORY_PATH%</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\\\</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">*</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.lastUpdated</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rem</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">搜索完毕</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>代码解释：</strong><ul><li><code>set REPOSITORY_PATH=...</code>: 设置本地仓库的路径。</li><li><code>del /s /q ...</code>: 删除指定路径下所有以 <code>.lastUpdated</code> 结尾的文件。</li><li><code>pause</code>: 暂停批处理脚本的执行，等待用户按下任意键继续。</li><li><strong>重点：</strong> 清理 Maven 仓库可以解决依赖下载不完整的问题。</li></ul></li></ul>`,85)]))}const F=a(x,[["render",_],["__file","index.html.vue"]]),I=JSON.parse('{"path":"/itheima-javaweb/day04-1-maven/","title":"Day04-1 Maven","lang":"zh-CN","frontmatter":{"title":"Day04-1 Maven","createTime":"2025/03/01T12:58:00.000Z","updateTime":"2025/03/02T02:42:00.000Z","permalink":"/itheima-javaweb/day04-1-maven/"},"headers":[],"readingTime":{"minutes":10.73,"words":3220},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/黑马程序员 JavaWeb/4. Day04 Maven+SpringBoot Web入门/Day04-1 Maven.md"}');export{F as comp,I as data};
