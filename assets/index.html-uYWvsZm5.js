import{_ as a,c as i,d as n,o as t}from"./app-B6dbd404.js";const e="/notion-blog/assets/b9ecdaa3fd632fed39e5579ac41ca665-bH7MC3Sr.png",l={};function p(r,s){return t(),i("div",null,s[0]||(s[0]=[n(`<p><strong>场景：</strong> 学工部整个部门解散了，该部门及部门下的员工都需要删除了。</p><p><strong>操作：</strong></p><ul><li>删除学工部</li><li>删除学工部的员工</li></ul><p><strong>问题：</strong> 如果删除部门成功了，而删除该部门的员工时失败了，此时就造成了数据的不一致。</p><p>要解决上述的问题，就需要通过数据库中的事务来解决。</p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span><strong><strong>介绍</strong></strong></span></a></h2><p>在实际的业务开发中，有些业务操作要多次访问数据库。需要将多次访问数据库的操作视为一个整体来执行，要么所有的 SQL 语句全部执行成功。如果其中有一条 SQL 语句失败，就进行事务的回滚，所有的 SQL 语句全部执行失败。</p><p>简而言之：事务是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><p><strong>事务作用：</strong> 保证在一个事务中多次操作数据库表中数据时，要么全都成功，要么全都失败。</p><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span><strong><strong>操作</strong></strong></span></a></h2><p>MySQL 中有两种方式进行事务的操作：</p><ol><li><strong>自动提交事务：</strong> 即执行一条 sql 语句提交一次事务。（默认 MySQL 的事务是自动提交）</li><li><strong>手动提交事务：</strong> 先开启，再提交</li></ol><p>事务操作有关的 SQL 语句：</p><table><thead><tr><th>SQL 语句</th><th>描述</th></tr></thead><tbody><tr><td><code>start transaction;</code></td><td>开启手动控制事务</td></tr><tr><td><code>begin ;</code></td><td>开启手动控制事务</td></tr><tr><td><code>commit;</code></td><td>提交事务</td></tr><tr><td><code>rollback;</code></td><td>回滚事务</td></tr></tbody></table><p>手动提交事务使用步骤：</p><ol><li>开启事务 =&gt; 执行 SQL 语句 =&gt; 成功 =&gt; 提交事务</li><li>开启事务 =&gt; 执行 SQL 语句 =&gt; 失败 =&gt; 回滚事务</li></ol><p><strong>使用事务控制删除部门和删除该部门下的员工的操作：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">开启事务</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">start</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">transaction</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">删除学工部</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">delete</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_dept</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">where</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">id</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">删除学工部的员工</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">delete</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tb_emp</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">where</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">dept_id</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述的这组 SQ L语句，如果如果执行成功，则提交事务：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">提交事务</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">(成功时执行)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">commit</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>否则回滚事务：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">--</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">回滚事务</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">(出错时执行)</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">rollback</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四大特性" tabindex="-1"><a class="header-anchor" href="#四大特性"><span><strong><strong>四大特性</strong></strong></span></a></h2><p>事务具有以下四个关键特性，通常称为 ACID 特性：</p><ul><li><strong>原子性（Atomicity）：</strong> 原子性是指事务包装的一组 SQL 语句是一个不可分割的工作单元，事务中的操作要么全部成功，要么全部失败。</li><li><strong>一致性（Consistency）：</strong> 一个事务完成之后数据都必须处于一致性状态。 <ul><li>如果事务成功的完成，那么数据库的所有变化将生效。</li><li>如果事务执行出现错误，那么数据库的所有变化将会被回滚（撤销），返回到原始状态。</li></ul></li><li><strong>隔离性（Isolation）：</strong> 多个用户并发的访问数据库时，一个用户的事务不能被其他用户的事务干扰，多个并发的事务之间要相互隔离。 <ul><li>一个事务的成功或者失败对于其他的事务是没有影响。</li></ul></li><li><strong>持久性（Durability）：</strong> 一个事务一旦被提交或回滚，它对数据库的改变将是永久性的，哪怕数据库发生异常，重启之后数据亦然存在。</li></ul><p><img src="`+e+'" alt="image.png"></p>',26)]))}const h=a(l,[["render",p],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/itheima-javaweb/day08-2-transactions/","title":"Day08-2 事务","lang":"zh-CN","frontmatter":{"title":"Day08-2 事务","createTime":"2025/03/01T12:58:00.000Z","updateTime":"2025/03/02T02:43:00.000Z","permalink":"/itheima-javaweb/day08-2-transactions/"},"headers":[],"readingTime":{"minutes":2.83,"words":850},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/黑马程序员 JavaWeb/8. Day08 MySQL-3 + Mybatis-1/Day08-2 事务.md"}');export{h as comp,c as data};
