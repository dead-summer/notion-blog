import{_ as t,c as d,d as o,o as a}from"./app-B6dbd404.js";const c={};function l(i,e){return a(),d("div",null,e[0]||(e[0]=[o("<p>Java 的浮点类型可以表示一个小数，比如 123.4, 7.8, 0.12 等等，采用 <code>float</code> 或 <code>double</code> 声明。</p><p>相关类型如下：</p><table><thead><tr><th>类型</th><th>占用的存储空间</th><th>范围</th></tr></thead><tbody><tr><td>float（单精度）</td><td>4 字节</td><td>-3.403E38 ~ 3.403E38</td></tr><tr><td>double（双精度）</td><td>8 字节</td><td>-1.798E308 ~ 1.798E308</td></tr></tbody></table><p>浮点数在机器中存放形式的简单可表示为：浮点数=符号位+指数位+尾数位。在存放时，尾数部分可能丢失，造成精度损失（小数都是近似值）。</p><p>浮点数使用细节如下：</p><ol><li>与整数类型类似，Java 浮点类型也有固定的范围和字段长度，不受具体 OS 的 影响。</li><li>Java 的浮点型常量（具体值）默认为 <code>double</code> 型，声明 <code>float</code> 型常量，须后加 <code>f</code> 或 <code>F</code> .</li><li>浮点型常量有两种表示形式 <ol><li>十进制数形式。如：<code>5.12</code> , <code>512.0f</code> , <code>.512</code></li><li>科学计数法形式：如：<code>5.12e2</code>, <code>5.12E-2</code></li></ol></li><li>通常情况下，应该使用 <code>double</code> 型，因为它比 <code>float</code> 型更精确。</li><li>浮点数使用陷阱： <code>2.7</code> 和 <code>8.1/3</code> 比较。</li></ol>",6)]))}const m=t(c,[["render",l],["__file","index.html.vue"]]),n=JSON.parse('{"path":"/hsp-java/3-8-floating-point-type/","title":"8 浮点类型","lang":"zh-CN","frontmatter":{"title":"8 浮点类型","createTime":"2024/11/29 16:35:00","permalink":"/hsp-java/3-8-floating-point-type/"},"headers":[],"readingTime":{"minutes":0.92,"words":277},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 3 章 变量/3.08 浮点类型.md"}');export{m as comp,n as data};
