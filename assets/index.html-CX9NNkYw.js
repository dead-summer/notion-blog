import{_ as s,c as i,d as e,o as l}from"./app-B6dbd404.js";const t={};function n(p,a){return l(),i("div",null,a[0]||(a[0]=[e(`<ol><li><p>Java 源文件以 java 为扩展名。源文件的基本组成部分是类 (class) ，如本类中的 Hello 类。</p></li><li><p>Java 应用程序的执行入口是 <code>main()</code> 方法。它有固定的书写格式：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">static</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Java 语言严格区分大小写。</p></li><li><p>Java 方法由一条条语句构成，每个语句以 &quot;<code>;</code>&quot; 结束。</p></li><li><p>大括号都是成对出现的，缺一不可。</p></li><li><p>一个源文件中最多只能有一个 <code>public</code> 类。其它类的个数不限，编译后，每一个类，都对于一个 <code>.class</code> 。</p></li><li><p>如果源文件包含一个 <code>public</code> 类，则文件名必须按该类名命名。</p></li><li><p>一个源文件中最多只能有一个 <code>public</code> 类。其它类的个数不限，也可以将 <code>main</code> 方法写在非 <code>public</code> 类中，然后指定运行非 <code>public</code> 类，这样入口方法就是非 <code>public</code> 的 <code>main</code> 方法</p></li></ol>`,1)]))}const c=s(t,[["render",n],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/hsp-java/2-13-java-development-notes-and-details/","title":"13 Java 开发注意事项和细节说明","lang":"zh-CN","frontmatter":{"title":"13 Java 开发注意事项和细节说明","createTime":"2024/11/28 13:14:00","permalink":"/hsp-java/2-13-java-development-notes-and-details/"},"headers":[],"readingTime":{"minutes":0.86,"words":257},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 2 章 Java 概述/2.13 Java 开发注意事项和细节说明.md"}');export{c as comp,o as data};
