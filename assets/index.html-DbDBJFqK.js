import{_ as a,c as i,d as n,o as p}from"./app-B6dbd404.js";const l={};function t(h,s){return p(),i("div",null,s[0]||(s[0]=[n(`<p>构造方法又叫构造器 (constructor) ，是类的一种特殊的方法，它的主要作用是完成对新对象的初始化。它有几个特点：</p><ol><li>方法名和类名相同.</li><li>没有返回值。</li><li>在创建对象时，系统会自动的调用该类的构造器完成对象的初始化。</li></ol><p>示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span class="space"> </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Constructor01</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">static</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">void</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//当我们</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">new</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">一个对象时，直接通过构造器指定名字和年龄</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Person</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">p1</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">new</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Person</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">smith</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">80</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">p1</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">的信息如下</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">p1</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">对象</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">name</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">p1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">smith</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">p1</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">对象</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">age</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">p1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">80</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span class="space"> </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Person</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//构造器</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//老韩解读</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//1.</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">构造器没有返回值,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">也不能写</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">void</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//2.</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">构造器的名称和类</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">Person</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">一样</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//3.</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">(String</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">pName,</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">int</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">pAge)</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">是构造器形参列表，规则和成员方法一样</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Person</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">pName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">pAge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">构造器被调用~~</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">完成对象的属性初始化</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">name</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">age</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pAge</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意事项和使用细节：</p><ol><li>一个类可以定义多个不同的构造器，即构造器重载。</li><li>构造器名和类名要相同。</li><li>构造器没有返回值。</li><li>构造器是完成对象的初始化，并不是创建对象</li><li>在创建对象时，系统自动的调用该类的构造方法。如果程序员没有定义构造器，系统会自动给类生成一个默认无参构造器（也叫默认构造器）。</li><li>自定义构造器后，默认的构造器将被覆盖，因此无法再使用默认的无参构造器，除非另在类中显式定义一个无参构造器。</li></ol>`,6)]))}const e=a(l,[["render",t],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/hsp-java/7-8-constructor-methods/","title":"8 构造方法","lang":"zh-CN","frontmatter":{"title":"8 构造方法","createTime":"2024/12/16 17:04:00","permalink":"/hsp-java/7-8-constructor-methods/"},"headers":[],"readingTime":{"minutes":1.46,"words":439},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 7 章 面向对象编程（基础部分）/7.08 构造方法.md"}');export{e as comp,c as data};
