import{_ as a,c as i,d as e,o as n}from"./app-B6dbd404.js";const p={};function l(t,s){return n(),i("div",null,s[0]||(s[0]=[e(`<p>基本语法为：<code>conditional expression ? expression 1: expression 2;</code></p><p>运算规则：</p><ol><li>如果条件表达式为 <code>true</code>，运算后的结果是 <code>expression 1</code>；</li><li>如果条件表达式为 <code>false</code>，运算后的结果是 <code>expression 2</code> ；</li></ol><p>使用时，需注意如下：</p><ol><li><p>表达式 1 和表达式 2 要为可以赋给接收变量的类型（或可以自动转换）</p></li><li><p>三元运算符可以转成 <code>if--else</code> 语句。</p><p>如：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">res</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">a</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">b</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">?</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">a</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">:</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">相当于</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">a</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">res</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">a</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">++</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">res</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">b</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,5)]))}const k=a(p,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/hsp-java/4-6-ternary-operator/","title":"6 三元运算符","lang":"zh-CN","frontmatter":{"title":"6 三元运算符","createTime":"2024/12/01 19:21:00","permalink":"/hsp-java/4-6-ternary-operator/"},"headers":[],"readingTime":{"minutes":0.48,"words":143},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 4 章 运算符/4.06 三元运算符.md"}');export{k as comp,r as data};
