import{_ as n,c as t,d as l,a as p,b as s,e as i,r,o as d}from"./app-B6dbd404.js";const c={};function o(h,a){const e=r("Mermaid");return d(),t("div",null,[a[0]||(a[0]=l(`<p>基本语法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">statement</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">statement</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">statement</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">code</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">block</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">to</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">be</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">executed</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>statement 1</code> 在代码块执行前执行（一次）。</li><li><code>statement 2</code> 定义了执行代码块的条件。</li><li><code>statement 3</code> 在代码块执行后执行（每次）。</li></ul>`,3)),p(e,{id:"mermaid-21",code:"eJxLL0osyFAIceFSAAKn6Kcdc58u737aM+3pvlXP+9Y/7Z/xsr0/FiKpoKtrp+BcDZF5Nnfhk93basEyziCZmpKi0tQaBZfoZ53LXyzsgah6sncyRLMLWLNb9LPZW55N24BpuBvEcCTj0hJzioHmuUa/2L75afsuiBaIYlewYvfo57uXP9+9FmKfQlp+kQLU3Al9z2e1PNm9+PmCxlguAMvLaJw="}),a[1]||(a[1]=s("p",null,"注意事项和细节说明",-1)),a[2]||(a[2]=s("ol",null,[s("li",null,"循环条件是返回一个布尔值的表达式"),s("li",null,[s("code",null,"For"),i(" 循环可省略为： "),s("code",null,"for (; statement 2; )"),i(" ，其中中的初始化和变量迭代可以写到其它地方，但是两边的分号不能省略。")]),s("li",null,"循环初始值可以有多条初始化语句，但要求类型一样，并且中间用逗号隔开，循环变量迭代也可以有多条变量迭代语句，中间用逗号隔开。")],-1))])}const m=n(c,[["render",o],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/hsp-java/5-7-for-loop-control/","title":"7 for 循环控制","lang":"zh-CN","frontmatter":{"title":"7 for 循环控制","createTime":"2024/12/02 17:19:00","permalink":"/hsp-java/5-7-for-loop-control/"},"headers":[],"readingTime":{"minutes":0.85,"words":256},"git":{"updatedTime":1740991950000,"contributors":[{"name":"dead_summer","username":"dead_summer","email":"2941325451@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/dead_summer?v=4","url":"https://github.com/dead_summer"}]},"filePathRelative":"notes/韩顺平 Java 教程/第 5 章 程序控制结构/5.07 for 循环控制.md"}');export{m as comp,u as data};
